local Players  = game:GetService("Players")
local Lighting = game:GetService("Lighting")

local player = Players.LocalPlayer

-- this function does all the setup per‐character
local function onCharacter(char)
    local pv = char:WaitForChild("pv")
    local bd = pv:WaitForChild("bd")
    local hp = pv:WaitForChild("hp")

    -- **RESET bd TO 250** whenever you spawn
    bd.Value = 250

    -- store original fog
    local origFogStart, origFogEnd = Lighting.FogStart, Lighting.FogEnd

    -- GUI (will persist across respawns because ResetOnSpawn=false)
    local screenGui = player:WaitForChild("PlayerGui"):FindFirstChild("ReviveGui")
    if screenGui then screenGui:Destroy() end

    screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ReviveGui"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = player.PlayerGui

    local reviveBar = Instance.new("Frame", screenGui)
    reviveBar.Size     = UDim2.new(0,200,0,20)
    reviveBar.Position = UDim2.new(0.5,-100,0.7,0)
    reviveBar.BackgroundColor3 = Color3.new(0,0,0)
    reviveBar.Visible = false

    local fill = Instance.new("Frame", reviveBar)
    fill.Size             = UDim2.new(0,0,1,0)
    fill.BackgroundColor3 = Color3.new(0,1,0)

    local function someoneNearby()
        local root = char:FindFirstChild("HumanoidRootPart")
        if not root then return false end
        for _, other in ipairs(Players:GetPlayers()) do
            if other~=player and other.Character then
                local oroot = other.Character:FindFirstChild("HumanoidRootPart")
                if oroot and (root.Position - oroot.Position).Magnitude <= 10 then
                    return true
                end
            end
        end
        return false
    end

    -- bleed‐down
    local draining = false
    local function drainBD()
        draining = true
        while hp.Value==0 and bd.Value>0 do
            bd.Value = bd.Value - 1
            wait(0.1)
        end
        if hp.Value==0 then bd.Value = -100 end
        draining = false
    end

    -- revive loop
    local function handleRevive()
        local elapsed = 0
        local needed  = 5

        reviveBar.Visible = true
        fill.Size = UDim2.new(0,0,1,0)

        while hp.Value==0 and bd.Value>0 do
            if someoneNearby() then
                elapsed = elapsed + 0.1
                fill.Size = UDim2.new(math.clamp(elapsed/needed,0,1),0,1,0)
                if elapsed >= needed then
                    hp.Value = 35
                    -- restore fog + kill blur
                    Lighting.FogStart, Lighting.FogEnd = origFogStart, origFogEnd
                    local blur = Lighting:FindFirstChildOfClass("BlurEffect")
                    if blur then blur.Enabled = false end
                    break
                end
            else
                -- reset if they walk away
                elapsed = 0
                reviveBar.Visible = false
                fill.Size = UDim2.new(0,0,1,0)
                repeat wait(0.1) until someoneNearby() or hp.Value~=0 or bd.Value<=0
                if hp.Value==0 and bd.Value>0 then
                    reviveBar.Visible = true
                end
            end
            wait(0.1)
        end

        reviveBar.Visible = false
    end

    -- hook up
    hp:GetPropertyChangedSignal("Value"):Connect(function()
        if hp.Value==0 and not draining then
            spawn(drainBD)
            spawn(handleRevive)
        end
    end)
end

-- connect on spawn and initial
player.CharacterAdded:Connect(onCharacter)
if player.Character then
    onCharacter(player.Character)
end
